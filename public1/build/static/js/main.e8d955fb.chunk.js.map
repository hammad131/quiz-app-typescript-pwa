{"version":3,"sources":["components/QuestionCard.style.tsx","API.tsx","components/QuestionCard.tsx","utilities.tsx","App.styles.ts","firebase.ts","App.tsx","index.tsx","swDev.js"],"names":["Difficulty","Wrapper","styled","div","ButtonWrapper","correct","userClicked","QuestionCard","question","answers","callback","userAnswer","questionNum","totalQuestion","dangerouslySetInnerHTML","__html","map","answer","correctAnswer","disabled","value","onClick","fetchQuestions","amount","difficulty","a","endpoint","fetch","json","data","results","array","incorrect_answers","correct_answer","sort","Math","random","GlobalStyle","createGlobalStyle","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","App","Notification","requestPermission","then","permission","getToken","currentToken","alert","prompt","console","log","catch","err","useState","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startQuiz","EASY","newQuestions","nextQuestion","length","className","undefined","e","currentTarget","prev","answerObject","TOTAL_QUESTIONS","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","register","registration","scope"],"mappings":"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","file":"static/js/main.e8d955fb.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: 1100px;\r\n  background: #ebfeff;\r\n  border-radius: 10px;\r\n  border: 2px solid #0085a3;\r\n  padding: 20px;\r\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n  text-align: center;\r\n  p {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\ntype ButtonWrapperProps = {\r\n  correct: boolean;\r\n  userClicked: boolean;\r\n};\r\n\r\nexport const ButtonWrapper = styled.div<ButtonWrapperProps>`\r\n  transition: all 0.3s ease;\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-size: 0.8rem;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px 0;\r\n    background: ${({ correct, userClicked }) =>\r\n      correct\r\n        ? 'linear-gradient(90deg, #56FFA4, #59BC86)'\r\n        : !correct && userClicked\r\n        ? 'linear-gradient(90deg, #FF5656, #C16868)'\r\n        : 'linear-gradient(90deg, #56ccff, #6eafb4)'};\r\n    border: 3px solid #ffffff;\r\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n  }\r\n`;","import { shuffleArray } from \"./utilities\";\r\n\r\nexport const fetchQuestions = async (amount: number, difficulty: Difficulty) =>{\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\r\n    const data = await(await fetch(endpoint)).json();\r\n    return data.results.map((question:Question)=>(\r\n        {\r\n          ...question,\r\n          answers: shuffleArray([...question.incorrect_answers, question.correct_answer]) \r\n        }\r\n    ))\r\n\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport enum Difficulty{\r\n    EASY = 'easy',\r\n    MEDIUM = 'medium',\r\n    HARD = 'hard'\r\n}\r\n\r\nexport type Question= {\r\n    category: string;\r\n    correct_answer: string;\r\n    difficulty: string;\r\n    incorrect_answers: string[];\r\n    question:string;\r\n    type:string;\r\n}\r\n\r\nexport type QuestionState = Question & {answers: string[]};","import React from 'react'\r\nimport { ButtonWrapper, Wrapper } from './QuestionCard.style'\r\ntype props = {\r\n    question: string;\r\n    answers: string[];\r\n    callback: any;\r\n    userAnswer: any;\r\n    questionNum:number;\r\n    totalQuestion:number;\r\n}\r\n\r\nconst QuestionCard: React.FC<props>=({question, answers, callback, userAnswer, questionNum, totalQuestion})=> {\r\n\r\n    \r\n    return (\r\n        <Wrapper>\r\n            <p>\r\n                Question: {questionNum} / {totalQuestion}\r\n            </p>\r\n            <p dangerouslySetInnerHTML={ {__html: question}} />\r\n            <div>\r\n                {answers.map(answer =>(\r\n                    <ButtonWrapper\r\n                            correct = {userAnswer?.correctAnswer === answer}\r\n                            userClicked = {userAnswer?.answer === answer}\r\n                    \r\n                    >\r\n                        <button disabled={userAnswer} value={answer} onClick={callback}>\r\n                            <span dangerouslySetInnerHTML={{ __html: answer }} />\r\n                        </button>\r\n                        </ButtonWrapper>\r\n\r\n                ))}\r\n            </div>\r\n            </Wrapper>\r\n    )\r\n}\r\n\r\nexport default QuestionCard;\r\n","export const shuffleArray = (array: any[]) => \r\n    [...array].sort(() => Math.random() -0.5)\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        height: 100%;\r\n    }\r\n    body {\r\n        background-color: navy;\r\n        margin: 0;\r\n        padding: 0 20px;\r\n        display flex;\r\n        justify-content: center\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'Catamaran', sans-serif;\r\n    }\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  > p {\r\n    color: #fff;\r\n  }\r\n  .score {\r\n    color: #fff;\r\n    font-size: 2rem;\r\n    margin: 0;\r\n  }\r\n  h1 {\r\n    font-family: Fascinate Inline;\r\n    background-image: linear-gradient(180deg, #fff, #87f1ff);\r\n    font-weight: 400;\r\n    background-size: 100%;\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    -moz-background-clip: text;\r\n    -moz-text-fill-color: transparent;\r\n    filter: drop-shadow(2px 2px #0085a3);\r\n    font-size: 70px;\r\n    text-align: center;\r\n    margin: 20px;\r\n  }\r\n  .start, .next {\r\n    cursor: pointer;\r\n    background: linear-gradient(180deg, #ffffff, #ffcc91);\r\n    border: 2px solid #d38558;\r\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: 10px;\r\n    height: 40px;\r\n    margin: 20px 0;\r\n    padding: 0 40px;\r\n  }\r\n  .start {\r\n    max-width: 200px;\r\n  }\r\n`;","import firebase from 'firebase'\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBqogqs8aEbr22zJbMpHObyZNXLnZkGxyc\",\r\n  authDomain: \"quiz-app-8b416.firebaseapp.com\",\r\n  projectId: \"quiz-app-8b416\",\r\n  storageBucket: \"quiz-app-8b416.appspot.com\",\r\n  messagingSenderId: \"908378221045\",\r\n  appId: \"1:908378221045:web:85a59cb52a230e0c3518bc\",\r\n  measurementId: \"G-9DXM45V50R\"\r\n\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nconst messaging = firebase.messaging();\r\n\r\nexport function configNotification() {\r\n    \r\n  Notification.requestPermission().then((permission) => {\r\n      messaging.getToken().then((currentToken) => {\r\n        alert(currentToken);\r\n        prompt('token', currentToken);\r\n        console.log(currentToken)\r\n        \r\n        if (currentToken) {\r\n        } else {\r\n          // Show permission request.\r\n          console.log('No registration token available. Request permission to generate one.');\r\n\r\n        }\r\n      }).catch((err) => {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n\r\n      });\r\n  \r\n  \r\n  })\r\n\r\n}","import React, { useState } from 'react';\nimport  QuestionCard  from './components/QuestionCard';\nimport { fetchQuestions, Difficulty, QuestionState } from './API';\nimport { GlobalStyle, Wrapper } from './App.styles';\nimport {configNotification} from './firebase';\n\nconst TOTAL_QUESTIONS = 10;\n\ntype AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n}\n\nfunction App() {\n  configNotification()\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log(questions);\n\n  const startQuiz = async() => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuestions(TOTAL_QUESTIONS, Difficulty.EASY)\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const nextQuestion = async() => {\n    const nextQuestion = number + 1;\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    }\n    else {\n      setNumber(nextQuestion);\n    }\n  };\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n\n      const correct = questions[number].correct_answer === answer;\n\n      if (correct) setScore(prev => prev + 1)\n\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer\n      }\n\n      setUserAnswers(prev => [...prev, answerObject])\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Wrapper>\n        <h1>Quiz</h1>\n        {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n        <button className='start' onClick={startQuiz}>\n          Begin Quiz\n        </button> ) : null }\n        {!gameOver ? (\n        <p className='score'>\n          Score: {score}\n        </p> ) : null }\n        {loading ? (\n        <p>\n          Loading\n        </p> ) : null }\n        {!loading && !gameOver ? (\n        <QuestionCard\n          questionNum={number + 1}\n          totalQuestion={TOTAL_QUESTIONS}\n          question={questions[number].question}\n          answers={questions[number].answers}\n          userAnswer={userAnswers ? userAnswers[number] : undefined }\n          callback={checkAnswer}\n        /> ) : null }\n        {!gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? (\n        <button className='next' onClick={nextQuestion}>\n          Next\n        </button> ) : null }\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport {swDev} from './swDev'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nswDev();\n","export function swDev() {\r\n\r\n    if ('serviceWorker' in navigator) {\r\n          navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n            // Registration was successful\r\n            console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n          }, function(err) {\r\n            // registration failed :(\r\n            console.log('ServiceWorker registration failed: ', err);\r\n          });\r\n      } else {\r\n          console.log(\"ServiceWorker not found\")\r\n      }\r\n\r\n}"],"sourceRoot":""}